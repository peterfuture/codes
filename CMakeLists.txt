cmake_minimum_required(VERSION 2.8.9)

project(codes)

##############################################
#  OPTION
##############################################
option(PROTO_ENABLE "enable proto test" ON)
option(SOCI_ENABLE "soci-postgresql test" OFF)


IF(DEBUG)
	message(STATUS "To build debug version")
    add_definitions(-DDEBUG)
ENDIF()


##############################################
#  ENV
##############################################

find_package(Boost 1.54 COMPONENTS program_options REQUIRED)

####proto
if(PROTO_ENABLE)
find_package(Protobuf REQUIRED)
add_definitions(-DENABLE_PROTO_TEST)
include_directories(${PROTOBUF_INCLUDE_DIRS})
include_directories(${CMAKE_CURRENT_BINARY_DIR}/proto_lib)
endif()

#### SOCI-POSTGRESQL
if(SOCI_ENABLE)
find_package(PostgreSQL REQUIRED)
find_library(SOCI_LIBRARY NAMES soci_core HINTS /usr/local/lib /usr/local/lib64 /usr/lib64 /usr/lib /usr/local/lib /usr/lib/soci/lib)
find_library(SOCI_PG_LIBRARY NAMES soci_postgresql HINTS /usr/local/lib /usr/local/lib64 /usr/lib64 /usr/lib /usr/lib/soci/lib)
if(NOT SOCI_LIBRARY)
message(FATAL_ERROR "SOCI library NOT FOUND!" )
endif()
if(NOT SOCI_PG_LIBRARY)
message(FATAL_ERROR "SOCI do not have postgresql backend!" )
endif()
include_directories(${PostgreSQL_INCLUDE_DIRS})
find_path( SOCI_INCLUDE_DIRS connection-pool.h PATHS /usr/include/soci /usr/local/include/soci /opt/soci/include/soci)
include_directories(${SOCI_INCLUDE_DIRS})
link_libraries(${SOCI_LIBRARY} ${SOCI_PG_LIBRARY} ${PostgreSQL_LIBRARIES})

add_definitions(-DENABLE_SOCI_TEST)
endif()

#local include
include_directories(include)
#boost include
include_directories(${Boost_INCLUDE_DIRS})
link_libraries(${Boost_LIBRARIES})

##############################################
#  TARGET
##############################################
if(PROTO_ENABLE)
add_subdirectory(proto_lib)
endif()

add_subdirectory(src bin)

